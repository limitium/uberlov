<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $toward
 * @property integer $location_id
 * 
 * @method integer getId()          Returns the current record's "id" value
 * @method string  getName()        Returns the current record's "name" value
 * @method string  getToward()      Returns the current record's "toward" value
 * @method integer getLocationId()  Returns the current record's "location_id" value
 * @method Photo   setId()          Sets the current record's "id" value
 * @method Photo   setName()        Sets the current record's "name" value
 * @method Photo   setToward()      Sets the current record's "toward" value
 * @method Photo   setLocationId()  Sets the current record's "location_id" value
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 36, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 36,
             ));
        $this->hasColumn('toward', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('location_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');

        $this->setSubClasses(array(
             'PhotoLocation' => 
             array(
              'toward' => 'location',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $blameable0 = new Doctrine_Template_Blameable(array(
             'listener' => 'BlameableFishery',
             ));
        $this->actAs($blameable0);
    }
}