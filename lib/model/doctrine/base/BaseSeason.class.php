<?php

/**
 * BaseSeason
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Locations
 * @property Doctrine_Collection $LocationSeason
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method Doctrine_Collection getLocations()      Returns the current record's "Locations" collection
 * @method Doctrine_Collection getLocationSeason() Returns the current record's "LocationSeason" collection
 * @method Season              setId()             Sets the current record's "id" value
 * @method Season              setName()           Sets the current record's "name" value
 * @method Season              setLocations()      Sets the current record's "Locations" collection
 * @method Season              setLocationSeason() Sets the current record's "LocationSeason" collection
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSeason extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('season');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Location as Locations', array(
             'refClass' => 'LocationSeason',
             'local' => 'season_id',
             'foreign' => 'location_id'));

        $this->hasMany('LocationSeason', array(
             'local' => 'id',
             'foreign' => 'season_id'));
    }
}