<?php

/**
 * BaseCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Address
 * @property Doctrine_Collection $AreaLow
 * @property Doctrine_Collection $Region
 * 
 * @method integer             getId()      Returns the current record's "id" value
 * @method string              getName()    Returns the current record's "name" value
 * @method Doctrine_Collection getAddress() Returns the current record's "Address" collection
 * @method Doctrine_Collection getAreaLow() Returns the current record's "AreaLow" collection
 * @method Doctrine_Collection getRegion()  Returns the current record's "Region" collection
 * @method Country             setId()      Sets the current record's "id" value
 * @method Country             setName()    Sets the current record's "name" value
 * @method Country             setAddress() Sets the current record's "Address" collection
 * @method Country             setAreaLow() Sets the current record's "AreaLow" collection
 * @method Country             setRegion()  Sets the current record's "Region" collection
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Sergei Belov <limitium@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('country');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Address', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('AreaLow', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('Region', array(
             'local' => 'id',
             'foreign' => 'country_id'));
    }
}