<?php

/**
 * BaseAreaLow
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $country_id
 * @property Country $Country
 * @property Doctrine_Collection $Address
 * @property Doctrine_Collection $AreaHigh
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method integer             getCountryId()  Returns the current record's "country_id" value
 * @method Country             getCountry()    Returns the current record's "Country" value
 * @method Doctrine_Collection getAddress()    Returns the current record's "Address" collection
 * @method Doctrine_Collection getAreaHigh()   Returns the current record's "AreaHigh" collection
 * @method AreaLow             setId()         Sets the current record's "id" value
 * @method AreaLow             setName()       Sets the current record's "name" value
 * @method AreaLow             setCountryId()  Sets the current record's "country_id" value
 * @method AreaLow             setCountry()    Sets the current record's "Country" value
 * @method AreaLow             setAddress()    Sets the current record's "Address" collection
 * @method AreaLow             setAreaHigh()   Sets the current record's "AreaHigh" collection
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAreaLow extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('area_low');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('type', 'INNODB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasMany('Address', array(
             'local' => 'id',
             'foreign' => 'area_low_id'));

        $this->hasMany('AreaHigh', array(
             'local' => 'id',
             'foreign' => 'area_low_id'));
    }
}