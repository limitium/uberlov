<?php

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $area_low_id
 * @property integer $area_high_id
 * @property integer $locality_id
 * @property integer $route_id
 * @property Country $Country
 * @property AreaLow $AreaLow
 * @property AreaHigh $AreaHigh
 * @property Locality $Locality
 * @property Route $Route
 * @property Doctrine_Collection $Location
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method integer             getCountryId()    Returns the current record's "country_id" value
 * @method integer             getAreaLowId()    Returns the current record's "area_low_id" value
 * @method integer             getAreaHighId()   Returns the current record's "area_high_id" value
 * @method integer             getLocalityId()   Returns the current record's "locality_id" value
 * @method integer             getRouteId()      Returns the current record's "route_id" value
 * @method Country             getCountry()      Returns the current record's "Country" value
 * @method AreaLow             getAreaLow()      Returns the current record's "AreaLow" value
 * @method AreaHigh            getAreaHigh()     Returns the current record's "AreaHigh" value
 * @method Locality            getLocality()     Returns the current record's "Locality" value
 * @method Route               getRoute()        Returns the current record's "Route" value
 * @method Doctrine_Collection getLocation()     Returns the current record's "Location" collection
 * @method Address             setId()           Sets the current record's "id" value
 * @method Address             setCountryId()    Sets the current record's "country_id" value
 * @method Address             setAreaLowId()    Sets the current record's "area_low_id" value
 * @method Address             setAreaHighId()   Sets the current record's "area_high_id" value
 * @method Address             setLocalityId()   Sets the current record's "locality_id" value
 * @method Address             setRouteId()      Sets the current record's "route_id" value
 * @method Address             setCountry()      Sets the current record's "Country" value
 * @method Address             setAreaLow()      Sets the current record's "AreaLow" value
 * @method Address             setAreaHigh()     Sets the current record's "AreaHigh" value
 * @method Address             setLocality()     Sets the current record's "Locality" value
 * @method Address             setRoute()        Sets the current record's "Route" value
 * @method Address             setLocation()     Sets the current record's "Location" collection
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Sergei Belov <limitium@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('area_low_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('area_high_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('locality_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('route_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('AreaLow', array(
             'local' => 'area_low_id',
             'foreign' => 'id'));

        $this->hasOne('AreaHigh', array(
             'local' => 'area_high_id',
             'foreign' => 'id'));

        $this->hasOne('Locality', array(
             'local' => 'locality_id',
             'foreign' => 'id'));

        $this->hasOne('Route', array(
             'local' => 'route_id',
             'foreign' => 'id'));

        $this->hasMany('Location', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}