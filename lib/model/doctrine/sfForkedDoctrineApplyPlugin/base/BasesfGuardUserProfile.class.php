<?php

/**
 * BasesfGuardUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $email_new
 * @property timestamp $validate_at
 * @property string $validate
 * @property integer $id
 * @property boolean $sex
 * @property date $birth_date
 * @property string $userpic
 * @property string $description
 * @property integer $city_id
 * @property sfGuardUser $User
 * @property City $City
 * @property Doctrine_Collection $Wishes
 * @property Doctrine_Collection $Inboxes
 * @property Doctrine_Collection $ReadComment
 * @property Doctrine_Collection $Requester
 * @property Doctrine_Collection $Accepter
 * @property Doctrine_Collection $WishList
 * @property Doctrine_Collection $Votes
 * @property Doctrine_Collection $VoteProfile
 * @property Doctrine_Collection $Inboxed
 * @property Doctrine_Collection $Requesters
 * @property Doctrine_Collection $Accepters
 * 
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method string              getEmailNew()    Returns the current record's "email_new" value
 * @method timestamp           getValidateAt()  Returns the current record's "validate_at" value
 * @method string              getValidate()    Returns the current record's "validate" value
 * @method integer             getId()          Returns the current record's "id" value
 * @method boolean             getSex()         Returns the current record's "sex" value
 * @method date                getBirthDate()   Returns the current record's "birth_date" value
 * @method string              getUserpic()     Returns the current record's "userpic" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getCityId()      Returns the current record's "city_id" value
 * @method sfGuardUser         getUser()        Returns the current record's "User" value
 * @method City                getCity()        Returns the current record's "City" value
 * @method Doctrine_Collection getWishes()      Returns the current record's "Wishes" collection
 * @method Doctrine_Collection getInboxes()     Returns the current record's "Inboxes" collection
 * @method Doctrine_Collection getReadComment() Returns the current record's "ReadComment" collection
 * @method Doctrine_Collection getRequester()   Returns the current record's "Requester" collection
 * @method Doctrine_Collection getAccepter()    Returns the current record's "Accepter" collection
 * @method Doctrine_Collection getWishList()    Returns the current record's "WishList" collection
 * @method Doctrine_Collection getVotes()       Returns the current record's "Votes" collection
 * @method Doctrine_Collection getVoteProfile() Returns the current record's "VoteProfile" collection
 * @method Doctrine_Collection getInboxed()     Returns the current record's "Inboxed" collection
 * @method Doctrine_Collection getRequesters()  Returns the current record's "Requesters" collection
 * @method Doctrine_Collection getAccepters()   Returns the current record's "Accepters" collection
 * @method sfGuardUserProfile  setUserId()      Sets the current record's "user_id" value
 * @method sfGuardUserProfile  setEmailNew()    Sets the current record's "email_new" value
 * @method sfGuardUserProfile  setValidateAt()  Sets the current record's "validate_at" value
 * @method sfGuardUserProfile  setValidate()    Sets the current record's "validate" value
 * @method sfGuardUserProfile  setId()          Sets the current record's "id" value
 * @method sfGuardUserProfile  setSex()         Sets the current record's "sex" value
 * @method sfGuardUserProfile  setBirthDate()   Sets the current record's "birth_date" value
 * @method sfGuardUserProfile  setUserpic()     Sets the current record's "userpic" value
 * @method sfGuardUserProfile  setDescription() Sets the current record's "description" value
 * @method sfGuardUserProfile  setCityId()      Sets the current record's "city_id" value
 * @method sfGuardUserProfile  setUser()        Sets the current record's "User" value
 * @method sfGuardUserProfile  setCity()        Sets the current record's "City" value
 * @method sfGuardUserProfile  setWishes()      Sets the current record's "Wishes" collection
 * @method sfGuardUserProfile  setInboxes()     Sets the current record's "Inboxes" collection
 * @method sfGuardUserProfile  setReadComment() Sets the current record's "ReadComment" collection
 * @method sfGuardUserProfile  setRequester()   Sets the current record's "Requester" collection
 * @method sfGuardUserProfile  setAccepter()    Sets the current record's "Accepter" collection
 * @method sfGuardUserProfile  setWishList()    Sets the current record's "WishList" collection
 * @method sfGuardUserProfile  setVotes()       Sets the current record's "Votes" collection
 * @method sfGuardUserProfile  setVoteProfile() Sets the current record's "VoteProfile" collection
 * @method sfGuardUserProfile  setInboxed()     Sets the current record's "Inboxed" collection
 * @method sfGuardUserProfile  setRequesters()  Sets the current record's "Requesters" collection
 * @method sfGuardUserProfile  setAccepters()   Sets the current record's "Accepters" collection
 * 
 * @package    FISHERY
 * @subpackage model
 * @author     Sergei Belov <limitium@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUserProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_profile');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('email_new', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('validate_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('validate', 'string', 33, array(
             'type' => 'string',
             'length' => 33,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('sex', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('birth_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('userpic', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('user_id_unique', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasMany('Location as Wishes', array(
             'refClass' => 'WishList',
             'local' => 'profile_id',
             'foreign' => 'location_id'));

        $this->hasMany('Inbox as Inboxes', array(
             'refClass' => 'Inboxed',
             'local' => 'profile_id',
             'foreign' => 'inbox_id'));

        $this->hasMany('Comment as ReadComment', array(
             'refClass' => 'ReadComment',
             'local' => 'profile_id',
             'foreign' => 'comment_id'));

        $this->hasMany('sfGuardUserProfile as Requester', array(
             'refClass' => 'Friend',
             'local' => 'accepter_id',
             'foreign' => 'requester_id'));

        $this->hasMany('sfGuardUserProfile as Accepter', array(
             'refClass' => 'Friend',
             'local' => 'requester_id',
             'foreign' => 'accepter_id'));

        $this->hasMany('WishList', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Vote as Votes', array(
             'local' => 'id',
             'foreign' => 'voter'));

        $this->hasMany('VoteProfile', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Inboxed', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Friend as Requesters', array(
             'local' => 'id',
             'foreign' => 'requester_id'));

        $this->hasMany('Friend as Accepters', array(
             'local' => 'id',
             'foreign' => 'accepter_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}