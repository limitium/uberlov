<?php

/**
 * Address
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    FISHERY
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Address extends BaseAddress {

    public function updateAddress($addressData) {
        $parent = null;
        foreach (array('country', 'areaLow', 'areaHigh', 'locality') as $partName) {
            $part = $this->getAddressPart($addressData, $partName, $parent);

            $parent = $part;
            fb('part class name ' . $part);

            $uPartName = ucfirst($partName);
            $this->$uPartName = $part ? $part : null;
        }
        $this->Route = null;
        if (isset($addressData['route'])&& $addressData['route']) {
            $this->Route = $this->getAddressPart($addressData, 'route', $this->Country);
        }
    }

    private function getAddressPart($addressData, $partName, $parent) {
        $uPartName = ucfirst($partName);
        $name = $addressData[$partName];

        $part = Doctrine_Query::create()
                        ->from($uPartName)
                        ->where('name = ?', $name)
                        ->fetchOne();

        if (!$part && $name) {
            $part = new $uPartName();
            $part->name = $name;
            fb('new part');
        }

        if ($parent && $part) {
            $parentName = get_class($parent);
            fb('has parent ' . $parentName);
            if ($part->$parentName->isNew()) {
                fb('parent empty');
                $part->$parentName = $parent;
            }
        }
        return $part;
    }

    public function __toString() {
        $address = link_to($this->getCountry()->getName(), 'address/country?id=' . $this->getCountry()->getId());
        $low = $this->getAreaLow();
        if ($low && !$low->isNew()) {
            $address .= ' â†’ ' . link_to($low->getName(), 'address/low?id=' . $low->getId());
        }
        $high = $this->getAreaHigh();
        if ($high && !$high->isNew()) {
            $address .= ' â†’ ' . link_to($high->getName(), 'address/high?id=' . $high->getId());
        }
        $locality = $this->getLocality();
        if ($locality && !$locality->isNew()) {
            $address .= ' â†’ ' . link_to($locality->getName(), 'address/locality?id=' . $locality->getId());
        }
        return $address;
    }

}