Location:
  actAs:
    Versionable: 
    Timestampable: 
    Sluggable: 
    Geographical: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  tableName: location
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      default: ''
      type: string(50)
      notnull: true
    description:
      default: ''
      type: string
      notnull: true
    depth:
      type: float
    is_free:
      default: 1
      type: boolean
    price:
      type: string
    location_flow_id:
      type: integer(4)
    location_fundus_id:
      type: integer(4)
    location_relief_id:
      type: integer(4)
    location_type_id:
      type: integer(4)
    location_scope_id:
      type: integer(4)
    address_id:
      type: integer(4)
  relations:
    LocationFlow:
      local: location_flow_id
      foreign: id
    LocationFundus:
      local: location_fundus_id
      foreign: id
    LocationRelief:
      local: location_relief_id
      foreign: id
    LocationType:
      local: location_type_id
      foreign: id
    LocationScope:
      local: location_scope_id
      foreign: id
    Address:
      local: address_id
      foreign: id
    Wishers:
      class: sfGuardUserProfile
      refClass: WishList
      local: location_id
      foreign: profile_id
sfGuardUserProfile:
  actAs:
    Timestampable: 
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    sex:
      default: 1
      type: boolean
      notnull: true
    birth_date:
      type: date
    userpic:
      type: string(255)
    description:
      type: string
    user_id:
      unique: true
      type: integer
    validate_at:
      type: timestamp
    validate:
      type: string(33)
    email_new:
      unique: true
      type: string(255)
    city_id:
      type: integer(4)
  relations:
    City:
      local: city_id
      foreign: id
    Wishes:
      class: Location
      refClass: WishList
      local: profile_id
      foreign: location_id
    Requester:
      class: sfGuardUserProfile
      refClass: Friend
      local: accepter_id
      foreign: requester_id
    Accepter:
      class: sfGuardUserProfile
      refClass: Friend
      local: requester_id
      foreign: accepter_id
    ReadComment:
      class: Comment
      refClass: ReadComment
      local: profile_id
      foreign: comment_id
    Inboxes:
      class: Inbox
      refClass: Inboxed
      local: profile_id
      foreign: inbox_id
Fish:
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      unique: true
      type: string(100)
      notnull: true
Profit:
  actAs:
    Timestampable: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    location_id:
      type: integer(4)
    date:
      type: timestamp
      notnull: true
    cordage:
      type: string
      notnull: true
    description:
      type: string
      notnull: true
    fish_id:
      type: integer(4)
    weight:
      type: float
  relations:
    Location:
      local: location_id
      foreign: id
    Fish:
      local: fish_id
      foreign: id
Style:
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      unique: true
      type: string(100)
      notnull: true
ProfitDetail:
  columns:
    profit_id:
      type: integer(4)
    style_id:
      type: integer(4)
    fish_id:
      type: integer(4)
    qty:
      type: float
      notnull: true
  indexes:
    unique_fish_style_per_profit:
      fields: [profit_id, style_id, fish_id]
      type: unique
  relations:
    Profit:
      local: profit_id
      foreign: id
    Style:
      local: style_id
      foreign: id
    Fish:
      local: fish_id
      foreign: id
LocationRelief:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
LocationFlow:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
LocationFundus:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
Comment:
  actAs:
    Timestampable: 
    NestedSet:
      hasManyRoots: true
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    parent:
      type: integer(4)
    message:
      type: string(1000)
      notnull: true
    toward: 
CommentLocation:
  columns:
    location_id:
      type: integer(4)
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: location
  relations:
    Location:
      local: location_id
      foreign: id
CommentProfit:
  columns:
    profit_id:
      type: integer(4)
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: profit
  relations:
    Profit:
      local: profit_id
      foreign: id
LocationType:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(50)
      notnull: true
WishList:
  columns:
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
    location_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    sfGuardUserProfile:
      local: profile_id
      foreign: id
    Location:
      local: location_id
      foreign: id
Vote:
  columns:
    value:
      type: integer(4)
      notnull: true
    voter:
      type: integer(4)
    toward: 
  relations:
    Voter:
      class: sfGuardUserProfile
      foreignAlias: Votes
      local: voter
      foreign: id
VoteLocation:
  columns:
    location_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: location
  relations:
    Location:
      local: location_id
      foreign: id
VoteComment:
  columns:
    comment_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: comment
  relations:
    Comment:
      local: comment_id
      foreign: id
VoteProfit:
  columns:
    profit_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: profit
  relations:
    Profit:
      local: profit_id
      foreign: id
LocationScope:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(50)
      notnull: true
VoteProfile:
  columns:
    profile_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: profile
  relations:
    Profile:
      class: sfGuardUserProfile
      foreignAlias: VoteProfile
      type: one
      foreignType: many
      local: profile_id
      foreign: id
Address:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    country_id:
      type: integer(4)
    area_low_id:
      type: integer(4)
    area_high_id:
      type: integer(4)
    locality_id:
      type: integer(4)
  relations:
    Country:
      local: country_id
      foreign: id
    AreaLow:
      local: area_low_id
      foreign: id
    AreaHigh:
      local: area_high_id
      foreign: id
    Locality:
      local: locality_id
      foreign: id
Country:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
Locality:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    area_high_id:
      type: integer(4)
  relations:
    AreaHigh:
      local: area_high_id
      foreign: id
AreaLow:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    country_id:
      type: integer(4)
  relations:
    Country:
      local: country_id
      foreign: id
AreaHigh:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    area_low_id:
      type: integer(4)
  relations:
    AreaLow:
      local: area_low_id
      foreign: id
Inbox:
  actAs:
    Timestampable: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    message:
      type: string
      notnull: true
  relations:
    Inboxed:
      class: sfGuardUserProfile
      refClass: Inboxed
      local: inbox_id
      foreign: profile_id
Inboxed:
  columns:
    inbox_id:
      primary: true
      type: integer(4)
      notnull: true
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    Inbox:
      local: inbox_id
      foreign: id
    sfGuardUserProfile:
      local: profile_id
      foreign: id
CommentInbox:
  columns:
    inbox_id:
      type: integer(4)
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: Inbox
  relations:
    Inbox:
      local: inbox_id
      foreign: id
Talk:
  actAs:
    Timestampable: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
    Taggable: 
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    message:
      type: string
      notnull: true
    talk_section_id:
      type: integer(4)
  relations:
    TalkSection:
      local: talk_section_id
      foreign: id
TalkSection:
  actAs:
    NestedSet:
      hasManyRoots: false
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    parent:
      type: integer(4)
    name:
      type: string(50)
      notnull: true
CommentTalk:
  columns:
    talk_id:
      type: integer(4)
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: talk
  relations:
    Talk:
      local: talk_id
      foreign: id
ReadComment:
  columns:
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
    comment_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    sfGuardUserProfile:
      local: profile_id
      foreign: id
    Comment:
      local: comment_id
      foreign: id
VoteTalk:
  columns:
    talk_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: talk
  relations:
    Talk:
      local: talk_id
      foreign: id
FishEvent:
  actAs:
    Timestampable: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    date:
      type: date
      notnull: true
    name:
      type: string(50)
      notnull: true
    description:
      type: string
      notnull: true
    rules:
      type: string
    location_id:
      type: integer(4)
      notnull: true
  relations:
    Location:
      local: location_id
      foreign: id
VoteFishEvent:
  columns:
    fish_event_id:
      type: integer(4)
  inheritance:
    extends: Vote
    type: column_aggregation
    keyField: toward
    keyValue: fish_event
  relations:
    FishEvent:
      local: fish_event_id
      foreign: id
Photo:
  actAs:
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          type: int
          length: 4
        updated:
          type: int
          length: 4
      relations:
        created:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
        updated:
          disabled: false
          class: sfGuardUserProfile
          foreign: id
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(36)
      notnull: true
    toward: 
PhotoLocation:
  columns:
    location_id:
      type: integer(4)
  inheritance:
    extends: Photo
    type: column_aggregation
    keyField: toward
    keyValue: location
  relations:
    Location:
      local: location_id
      foreign: id
Friend:
  columns:
    requester_id:
      primary: true
      type: integer(4)
      notnull: true
    accepter_id:
      primary: true
      type: integer(4)
      notnull: true
    accepted:
      default: 0
      type: boolean
  relations:
    Requester:
      class: sfGuardUserProfile
      foreignAlias: Requesters
      type: one
      foreignType: many
      local: requester_id
      foreign: id
    Accepter:
      class: sfGuardUserProfile
      foreignAlias: Accepters
      type: one
      foreignType: many
      local: accepter_id
      foreign: id
City:
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(30)
      notnull: true
    country_id:
      type: integer(4)
  relations:
    Country:
      local: country_id
      foreign: id
CommentFishEvent:
  columns:
    fish_event_id:
      type: integer(4)
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: fish_event
  relations:
    FishEvent:
      local: fish_event_id
      foreign: id
options:
  charset: utf8
  collate: utf8_general_ci
  type: INNODB
