Location:
  tableName: location
  actAs:
    Blameable:
      listener: BlameableFishery
      relations:
        updated:
          class: Profile
          disabled: false
          foreign: id
        created:
          foreign: id
          disabled: false
          class: Profile
      columns:
        updated:
          type: int
          length: 4
        created:
          type: int
          length: 4
    Geographical: 
    Sluggable: 
    Timestampable: 
    Versionable: 
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      default: ''
      type: string(50)
      notnull: true
    description:
      default: ''
      type: string
      notnull: true
    depth:
      type: float
    is_free:
      default: 1
      type: boolean
    price:
      type: string
    location_flow_id:
      type: integer(4)
    location_fundus_id:
      type: integer(4)
    location_relief_id:
      type: integer(4)
    location_type_id:
      type: integer(4)
    location_scope_id:
      type: integer(4)
    address_id:
      type: integer(4)
  relations:
    LocationFlow:
      local: location_flow_id
      foreign: id
    LocationFundus:
      local: location_fundus_id
      foreign: id
    LocationRelief:
      local: location_relief_id
      foreign: id
    LocationType:
      local: location_type_id
      foreign: id
    LocationScope:
      local: location_scope_id
      foreign: id
    Address:
      local: address_id
      foreign: id
    Wishers:
      class: Profile
      refClass: WishList
      local: location_id
      foreign: profile_id
Profile:
  tableName: profile
  actAs:
    Timestampable: 
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    nick_name:
      default: ''
      type: string(50)
      notnull: true
    first_name:
      default: ''
      type: string(50)
    last_name:
      default: ''
      type: string(50)
    birth_date:
      type: date
    userpic:
      type: string(255)
    sex:
      default: 1
      type: boolean
      notnull: true
  relations:
    Wishes:
      class: Location
      refClass: WishList
      local: profile_id
      foreign: location_id
    MyFirends:
      class: Profile
      refClass: Friend
      local: related_profile_id
      foreign: source_profile_id
    MyFirends2:
      class: Profile
      refClass: Friend
      local: source_profile_id
      foreign: related_profile_id
    Inboxes:
      class: Inbox
      refClass: Inboxed
      local: profile_id
      foreign: inbox_id
    ReadComment:
      class: Comment
      refClass: ReadComment
      local: profile_id
      foreign: comment_id
Fish:
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      unique: true
      type: string(100)
      notnull: true
Profit:
  actAs:
    Timestampable: 
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          length: 4
          type: int
        updated:
          length: 4
          type: int
      relations:
        created:
          class: Profile
          disabled: false
          foreign: id
        updated:
          foreign: id
          disabled: false
          class: Profile
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    location_id:
      type: integer(4)
    begin:
      type: timestamp
      notnull: true
    cordage:
      type: string
      notnull: true
    description:
      type: string
      notnull: true
    fish_id:
      type: integer(4)
    style_id:
      type: integer(4)
  relations:
    Location:
      local: location_id
      foreign: id
    Fish:
      local: fish_id
      foreign: id
    Style:
      local: style_id
      foreign: id
Style:
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      unique: true
      type: string(100)
      notnull: true
ProfitDetail:
  columns:
    time:
      type: timestamp
      notnull: true
    profit_id:
      type: integer(4)
    style_id:
      type: integer(4)
    fish_id:
      type: integer(4)
    qty:
      type: float
      notnull: true
  indexes:
    unique_fish_style_per_profit:
      fields: [profit_id, style_id, fish_id]
      type: unique
  relations:
    Profit:
      local: profit_id
      foreign: id
    Style:
      local: style_id
      foreign: id
    Fish:
      local: fish_id
      foreign: id
LocationRelief:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
LocationFlow:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
LocationFundus:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      type: string(50)
      notnull: true
Comment:
  actAs:
    Blameable:
      listener: BlameableFishery
      relations:
        created:
          class: Profile
          foreign: id
          name: CommentBy
          disabled: false
        updated:
          class: Profile
          name: ChangedBy
          foreign: id
          disabled: false
      columns:
        created:
          type: int
          length: 4
        updated:
          length: 4
          type: int
    Timestampable: 
    NestedSet:
      hasManyRoots: true
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    parent:
      type: integer(4)
    message:
      type: string(1000)
      notnull: true
CommentLocation:
  inheritance:
    extends: Comment
    type: column_aggregation
    keyField: toward
    keyValue: location
  columns:
    location_id:
      type: integer(4)
  relations:
    Location:
      local: location_id
      foreign: id
CommentProfit:
  inheritance:
    extends: Comment
    keyField: toward
    keyValue: profit
    type: column_aggregation
  columns:
    profit_id:
      type: integer(4)
  relations:
    Profit:
      local: profit_id
      foreign: id
LocationType:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(50)
      notnull: true
WishList:
  columns:
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
    location_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    Profile:
      local: profile_id
      foreign: id
    Location:
      local: location_id
      foreign: id
Friend:
  columns:
    source_profile_id:
      primary: true
      type: integer(4)
      notnull: true
    related_profile_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    Profile:
      local: source_profile_id
      foreign: id
    Profile:
      local: related_profile_id
      foreign: id
Vote:
  columns:
    value:
      type: integer(4)
      notnull: true
    voter:
      type: integer(4)
  relations:
    Voter:
      class: Profile
      foreignAlias: Votes
      local: voter
      foreign: id
VoteLocation:
  inheritance:
    extends: Vote
    keyField: toward
    keyValue: location
    type: column_aggregation
  columns:
    location_id:
      type: integer(4)
  relations:
    Location:
      local: location_id
      foreign: id
VoteComment:
  inheritance:
    type: column_aggregation
    keyValue: comment
    keyField: toward
    extends: Vote
  columns:
    comment_id:
      type: integer(4)
  relations:
    Comment:
      local: comment_id
      foreign: id
VoteProfit:
  inheritance:
    type: column_aggregation
    keyValue: profit
    keyField: toward
    extends: Vote
  columns:
    profit_id:
      type: integer(4)
  relations:
    Profit:
      local: profit_id
      foreign: id
LocationScope:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(50)
      notnull: true
VoteProfile:
  inheritance:
    type: column_aggregation
    keyValue: profile
    keyField: toward
    extends: Vote
  columns:
    profile_id:
      type: integer(4)
  relations:
    Profile:
      local: profile_id
      foreign: id
Address:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    country_id:
      type: integer(4)
    area_low_id:
      type: integer(4)
    area_high_id:
      type: integer(4)
    locality_id:
      type: integer(4)
  relations:
    Country:
      local: country_id
      foreign: id
    AreaLow:
      local: area_low_id
      foreign: id
    AreaHigh:
      local: area_high_id
      foreign: id
    Locality:
      local: locality_id
      foreign: id
Country:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
Locality:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    area_high_id:
      type: integer(4)
  relations:
    AreaHigh:
      local: area_high_id
      foreign: id
AreaLow:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    country_id:
      type: integer(4)
  relations:
    Country:
      local: country_id
      foreign: id
AreaHigh:
  columns:
    id:
      primary: true
      type: integer(4)
      autoincrement: true
    name:
      unique: true
      type: string(255)
      notnull: true
    area_low_id:
      type: integer(4)
  relations:
    AreaLow:
      local: area_low_id
      foreign: id
Inbox:
  actAs:
    Blameable:
      listener: BlameableFishery
      relations:
        created:
          class: Profile
          disabled: false
          foreign: id
        updated:
          disabled: false
          foreign: id
          class: Profile
      columns:
        created:
          length: 4
          type: int
        updated:
          length: 4
          type: int
    Timestampable: 
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    message:
      type: string
      notnull: true
  relations:
    Inboxed:
      class: Profile
      refClass: Inboxed
      local: inbox_id
      foreign: profile_id
Inboxed:
  columns:
    inbox_id:
      primary: true
      type: integer(4)
      notnull: true
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    Inbox:
      local: inbox_id
      foreign: id
    Profile:
      local: profile_id
      foreign: id
CommentInbox:
  inheritance:
    type: column_aggregation
    keyValue: Inbox
    keyField: toward
    extends: Comment
  columns:
    inbox_id:
      type: integer(4)
  relations:
    Inbox:
      local: inbox_id
      foreign: id
Talk:
  actAs:
    Blameable:
      listener: BlameableFishery
      columns:
        created:
          length: 4
          type: int
        updated:
          length: 4
          type: int
      relations:
        created:
          class: Profile
          disabled: false
          foreign: id
        updated:
          class: Profile
          disabled: false
          foreign: id
    Timestampable: 
    Taggable: 
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    name:
      type: string(50)
      notnull: true
    message:
      type: string
      notnull: true
    talk_section_id:
      type: integer(4)
  relations:
    TalkSection:
      local: talk_section_id
      foreign: id
TalkSection:
  actAs:
    NestedSet:
      hasManyRoots: false
  columns:
    id:
      primary: true
      type: integer(4)
      notnull: true
      autoincrement: true
    parent:
      type: integer(4)
    name:
      type: string(50)
      notnull: true
CommentTalk:
  inheritance:
    extends: Comment
    keyField: toward
    keyValue: talk
    type: column_aggregation
  columns:
    talk_id:
      type: integer(4)
  relations:
    Talk:
      local: talk_id
      foreign: id
ReadComment:
  columns:
    profile_id:
      primary: true
      type: integer(4)
      notnull: true
    comment_id:
      primary: true
      type: integer(4)
      notnull: true
  relations:
    Profile:
      local: profile_id
      foreign: id
    Comment:
      local: comment_id
      foreign: id
options:
  type: INNODB
  charset: utf8
  collate: utf8_general_ci